{"version":3,"file":"static/js/382.975790e9.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/profile/my-posts/myPosts.module.css?9aed","webpack://samurai-way/./src/components/profile/my-posts/post/post.module.css?7202","assets/icons/LikedIcon.tsx","assets/icons/NotLikedIcon.tsx","components/profile/my-posts/post/Post.tsx","components/profile/my-posts/add-post-form/AddPostForm.tsx","components/profile/my-posts/MyPosts.tsx","components/profile/my-posts/MyPostsContainer.tsx","webpack://samurai-way/./src/components/profile/profileInfo/profileInfo.module.css?01bc","components/profile/profileInfo/ProfileDataForm.tsx","components/profile/profileInfo/ProfileStatusWithHooks.tsx","components/profile/profileInfo/ProfileInfo.tsx","components/profile/Profile.tsx","components/profile/ProfileContainer.tsx","hoc/withAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"myPosts_postsBlock__W-MGe\",\"posts\":\"myPosts_posts__C34gb\",\"addPostBlock\":\"myPosts_addPostBlock__FIvDR\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"post_item__BbRru\",\"likes\":\"post_likes__pXp9Z\"};","import React from 'react';\r\n\r\nexport const LikedIcon = () => {\r\n    return (\r\n        <svg width=\"22\" height=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M4.45067 13.9082L11.4033 20.4395C11.6428 20.6644 11.7625 20.7769 11.9037 20.8046C11.9673 20.8171 12.0327 20.8171 12.0963 20.8046C12.2375 20.7769 12.3572 20.6644 12.5967 20.4395L19.5493 13.9082C21.5055 12.0706 21.743 9.0466 20.0978 6.92607L19.7885 6.52734C17.8203 3.99058 13.8696 4.41601 12.4867 7.31365C12.2913 7.72296 11.7087 7.72296 11.5133 7.31365C10.1304 4.41601 6.17972 3.99058 4.21154 6.52735L3.90219 6.92607C2.25695 9.0466 2.4945 12.0706 4.45067 13.9082Z\"\r\n                  fill='dimgrey'\r\n                  stroke='dimgrey'\r\n            />\r\n        </svg>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nexport const NotLikedIcon = () => {\r\n    return (\r\n        <svg width=\"22\" height=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M4.45067 13.9082L11.4033 20.4395C11.6428 20.6644 11.7625 20.7769 11.9037 20.8046C11.9673 20.8171 12.0327 20.8171 12.0963 20.8046C12.2375 20.7769 12.3572 20.6644 12.5967 20.4395L19.5493 13.9082C21.5055 12.0706 21.743 9.0466 20.0978 6.92607L19.7885 6.52734C17.8203 3.99058 13.8696 4.41601 12.4867 7.31365C12.2913 7.72296 11.7087 7.72296 11.5133 7.31365C10.1304 4.41601 6.17972 3.99058 4.21154 6.52735L3.90219 6.92607C2.25695 9.0466 2.4945 12.0706 4.45067 13.9082Z\"\r\n                  fill='white'\r\n                  stroke='dimgrey'\r\n            />\r\n        </svg>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport s from 'components/profile/my-posts/post/post.module.css';\r\nimport {LikedIcon, NotLikedIcon} from \"assets\";\r\n\r\n\r\n\r\n\r\ntype Props = {\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nconst Post = (props: Props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://i2.wp.com/vdostavka.ru/wp-content/uploads/2019/05/no-avatar.png?fit=512%2C512&ssl=1\" alt={'picture'}/>\r\n            {props.message}\r\n            <div className={s.likes}>\r\n                <span>\r\n                    <LikedIcon />\r\n                    <NotLikedIcon />\r\n                    {props.likesCount}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post;","import {required} from \"utils/validators/validators\";\r\nimport React from \"react\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport s from \"components/profile/my-posts/myPosts.module.css\";\r\nimport {createField, TextArea} from \"../../../common/forms-controls/FormsControls\";\r\n\r\nexport type AddPostFormData = {\r\n    newPostText: string\r\n}\r\n\r\ntype AddPostFormDataKeys = keyof AddPostFormData\r\n\r\nconst AddPostForm: React.FC<InjectedFormProps<AddPostFormData>> = (props) => {\r\n    return (\r\n        <div className={s.addPostBlock}>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div className={\"generalInput\"}>\r\n                    {createField<AddPostFormDataKeys>(\"post your message\", \"newPostText\", [required], TextArea)}\r\n                </div>\r\n                <div>\r\n                    <button className={\"button\"}>Add post</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default reduxForm<AddPostFormData>({form: \"profileAddNewPostForm\"})(AddPostForm)","import React from \"react\";\r\nimport s from \"components/profile/my-posts/myPosts.module.css\";\r\nimport Post from \"./post/Post\";\r\nimport {PostType} from \"redux/profileReducer\";\r\nimport AddPostForm, {AddPostFormData} from \"./add-post-form/AddPostForm\";\r\n\r\nexport type MapStateToPropsType = {\r\n    posts: PostType[]\r\n}\r\n\r\nexport type MapDispatchToPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\ntype MyPosts = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nconst MyPosts = React.memo((props: MyPosts) => {\r\n\r\n    let postsElement = props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    const onAddPost = (values: AddPostFormData) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"redux/profileReducer\";\r\nimport MyPosts, {MapDispatchToPropsType, MapStateToPropsType} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"redux/store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"profileInfo_descriptionBlock__FOVSC\",\"avaAndButtonBlock\":\"profileInfo_avaAndButtonBlock__lEox4\",\"statusAndNameBlock\":\"profileInfo_statusAndNameBlock__0peA7\",\"contactsBlock\":\"profileInfo_contactsBlock__8uMco\",\"button\":\"profileInfo_button__4ZFnA\"};","import React from \"react\";\r\nimport s from './profileInfo.module.css'\r\nimport style from 'components/common/forms-controls/formsControls.module.css'\r\nimport {createField, Input, TextArea} from \"../../common/forms-controls/FormsControls\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {ProfileType} from \"redux/profileReducer\";\r\n\r\n\r\nexport type ProfileFormDataContacts = {\r\n    profile: ProfileType\r\n}\r\n\r\ntype ProfileFormDataKeys = keyof ProfileType\r\n\r\nconst ProfileDataForm: React.FC<InjectedFormProps<ProfileType, ProfileFormDataContacts> & ProfileFormDataContacts> = ({handleSubmit, profile, error}) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={s.statusAndNameBlock}>\r\n                <div><button className={'button'}>Save</button></div>\r\n                {error && <div className={style.formSummaryError}> {error} </div>}\r\n                <div>\r\n                    <b>Name:</b> {createField('Name', 'fullName', [], Input)}\r\n                </div>\r\n                <div>\r\n                    <b>Looking for a job:</b>\r\n                    {createField<ProfileFormDataKeys>('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n                </div>\r\n                <div>\r\n                    <b>My professional skills:</b>\r\n                    {createField<ProfileFormDataKeys>('My professional skills', 'lookingForAJobDescription', [], TextArea)}\r\n                </div>\r\n                <div>\r\n                    <b>About me:</b>\r\n                    {createField<ProfileFormDataKeys>('About me', 'aboutMe', [], TextArea)}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.contactsBlock}>\r\n                <div><b>Contacts:</b> {Object.keys(profile.contacts ?? {}).map(key => {\r\n                    return <div>\r\n                        <b>{key}:</b> {createField(key, 'contacts.' + key, [], Input)}\r\n                    </div>\r\n                })}\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst ProfileDataFormReduxForm = reduxForm<ProfileType, ProfileFormDataContacts>({\r\n    form: 'edit-profile'\r\n})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\ntype Props = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatusWithHooks = (props: Props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState<string>(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n\r\n   const activateEditMode = () => {\r\n       setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status: </b><span onDoubleClick={activateEditMode}>{props.status || \"no status\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './profileInfo.module.css'\r\nimport {ContactsType, ProfileType} from \"redux/profileReducer\";\r\nimport userPhoto from \"assets/images/noname.png\"\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport {Preloader} from \"components/common/preloader/Preloader\";\r\n\r\ntype ProfileInfo = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n    uploadPhoto: (photo: File) => void\r\n    saveProfile: (formData: ProfileType) => Promise<any>\r\n}\r\n\r\nconst ProfileInfo: React.FC<ProfileInfo> = ({profile, status, updateStatus, isOwner, uploadPhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files?.length) {\r\n            uploadPhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData: ProfileType) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={s.descriptionBlock}>\r\n            <div className={s.avaAndButtonBlock}>\r\n                <img src={profile.photos.large || userPhoto}/>\r\n                {isOwner &&\r\n                    <label className={`button` + \" \" + s.button}>\r\n                        <input type={\"file\"} onChange={onMainPhotoSelected}/>\r\n                        Upload a photo\r\n                    </label>\r\n                }\r\n            </div>\r\n            <div className={s.statusAndNameBlock}>\r\n                {editMode\r\n                    ? <ProfileDataForm profile={profile} initialValues={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData profile={profile} isOwner={isOwner} triggerEditMode={() => setEditMode(true)}/>}\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\ntype ProfileData = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    triggerEditMode: () => void\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, triggerEditMode}: ProfileData) => {\r\n    return (\r\n        <>\r\n            {isOwner && <div>\r\n                <button onClick={triggerEditMode}>Edit</button>\r\n            </div>}\r\n            <div className={s.statusAndNameBlock}>\r\n                <div><b>Name:</b> {profile.fullName}</div>\r\n                <div>\r\n                    <b>About me:</b> {profile.aboutMe}\r\n                </div>\r\n                <div>\r\n                    <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n                </div>\r\n                <div>\r\n                    <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={s.contactsBlock}>\r\n                <div><b>Contacts:</b>\r\n                    {Object.keys(profile.contacts).map(key => {\r\n                        return <Contact\r\n                            key={key}\r\n                            title={key}\r\n                            value={profile.contacts[key as keyof ContactsType]}/>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\ntype ContactProps = {\r\n    title: string\r\n    value: string\r\n}\r\n\r\nexport const Contact = ({title, value}: ContactProps) => {\r\n    return <div style={{fontWeight: '400'}}>\r\n        <b>{title}:</b> {value}\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport {ProfileType} from \"redux/profileReducer\";\r\nimport MyPostsContainer from \"components/profile/my-posts/MyPostsContainer\";\r\nimport ProfileInfo from \"components/profile/profileInfo/ProfileInfo\";\r\nimport {Button} from \"antd\";\r\n\r\n\r\ntype Props = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n    uploadPhoto: (photo: File) => void\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n}\r\n\r\n\r\nconst Profile = (props: Props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         uploadPhoto={props.uploadPhoto}\r\n                         saveProfile={props.saveProfile}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatusTC,\r\n    getUserProfileTC,\r\n    ProfileType, saveProfileTC,\r\n    updateStatusTC, uploadPhotoTC\r\n} from \"redux/profileReducer\";\r\nimport {AppStateType} from \"redux/store\";\r\nimport {Location} from 'history';\r\n\r\nimport {withAuthRedirect} from \"hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"utils/withRouter\";\r\nimport { NavigateFunction, Params } from \"react-router-dom\";\r\nimport Profile from \"components/profile/Profile\";\r\n\r\n\r\ntype PathParamsType = {\r\n    router: {\r\n        location: Location;\r\n        navigate: NavigateFunction;\r\n        params: Params<'userId'>;\r\n    }\r\n}\r\n\r\ntype MapStateToPropsType = ReturnType<typeof mapStateToProps>\r\ntype MapDispatchToPropsType = {\r\n    getUserProfileTC: (userId: number) => void\r\n    getStatusTC: (userId: number) => void\r\n    updateStatusTC: (status: string) => void\r\n    uploadPhotoTC: (photo: File) => void\r\n    saveProfileTC: (profile: ProfileType) => Promise<any>\r\n}\r\n\r\ntype OwnPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\ntype Props = PathParamsType & OwnPropsType\r\n\r\nfunction ProfileContainer(props: Props) {\r\n\r\n    // useEffect(() => {\r\n    //     let userId: number | null = +props.match.params.userId;\r\n    //     if (!userId) {\r\n    //         userId = props.authorisedUserId;\r\n    //         if (!userId) {\r\n    //             props.history.push(\"/login\")\r\n    //         }\r\n    //     }\r\n    //     props.getUserProfileTC(userId as number)\r\n    //     props.getStatusTC(userId as number)\r\n    // }, [props.match.params.userId])\r\n\r\n    const refreshProfile = () => {\r\n        console.log(props.router)\r\n        let userID = props.router.params.userId\r\n\r\n        if (!userID) userID = props.authorisedUserId?.toString()\r\n        // if (!userID) {\r\n        //     this.props.router.location.pathname =\"/login\"\r\n        // }\r\n        //вроде все работает, проверить не показывает ли профиль после logout\r\n\r\n        if (!userID) {\r\n            console.error(\"ID should exist in URI params or in state\")\r\n        } else {\r\n            props.getUserProfileTC(Number(userID))\r\n            props.getStatusTC(Number(userID))\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        refreshProfile()\r\n    }, [])\r\n\r\n    // useEffect(function (prevProps: Props) {\r\n    //     if (prevProps.router.params.userId !== props.router.params.userId) refreshProfile()\r\n    // }, [])\r\n\r\n\r\n\r\n    return (\r\n        <Profile {...props}\r\n                 isOwner={!props.router.params.userId}\r\n                 profile={props.profile}\r\n                 status={props.status}\r\n                 updateStatus={props.updateStatusTC}\r\n                 uploadPhoto={props.uploadPhotoTC}\r\n                 saveProfile={props.saveProfileTC}/>\r\n    )\r\n\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUserProfileTC, getStatusTC, updateStatusTC, uploadPhotoTC, saveProfileTC}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n","import { Navigate } from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {AppStateType} from \"redux/store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype Props = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType): Props => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: Props) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Navigate to={\"/login\"}/>;\r\n\r\n        return <Component {...restProps as T} />\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect<Props, {}, T, AppStateType>(mapStateToPropsForRedirect, {})(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["LikedIcon","width","height","viewBox","fill","xmlns","d","stroke","NotLikedIcon","props","className","s","src","alt","message","likesCount","reduxForm","form","onSubmit","handleSubmit","createField","required","TextArea","React","postsElement","posts","map","p","id","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","profile","error","style","Input","type","Object","keys","contacts","key","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileData","isOwner","triggerEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Contact","title","fontWeight","uploadPhoto","saveProfile","Preloader","photos","large","userPhoto","target","files","length","initialValues","formData","then","compose","authorisedUserId","auth","isAuth","getUserProfileTC","getStatusTC","updateStatusTC","uploadPhotoTC","saveProfileTC","withRouter","withAuthRedirect","console","log","router","userID","params","userId","toString","Number","refreshProfile","mapStateToPropsForRedirect","Component","restProps","to"],"sourceRoot":""}